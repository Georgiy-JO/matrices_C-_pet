name: CI_try

# Controls when the workflow will run
on:
  push:
    # branches: [ "develop" ]
  workflow_dispatch: #for manual starts

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  format-check-main:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Checking code style of main code files
        run: |
          cd src
          clang-format --style=Google -n *.c *.h
          clang-format --style=Google -i *.c *.h
          if ! git diff --quiet; then
            exit 1
          fi
        continue-on-error: true

      - name: Sending bot message
        uses: ./.github/actions/bot_messaging
        with:
          bot_url: ${{ secrets.BOT_GLADOS_URL }}
          bot_id: ${{ secrets.JO_CHAT_ID }}
        continue-on-error: true

    continue-on-error: true

  format-check-tests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Checking code style of test files
        run: |
          cd src/tests
          clang-format --style=Google -n *.c
          clang-format --style=Google -i *.c
          if ! git diff --quiet; then
            exit 1
          fi
        continue-on-error: true

      - name: Sending bot message
        uses: ./.github/actions/bot_messaging
        with:
          bot_url: ${{ secrets.BOT_GLADOS_URL }}
          bot_id: ${{ secrets.JO_CHAT_ID }}
        continue-on-error: true

    continue-on-error: true


  cpp-check:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Checking C++/C code with CppCheck
        run: |
          cd src 
          make cpp_check &> CPP_CHECK.txt
          cat CPP_CHECK.txt
          echo "$(grep "\^" CPP_CHECK.txt | wc -l)" > VAR.txt
          if [ $(cat VAR.txt) -gt 2 ]; then  #*
            echo "| $(grep . VAR.txt) issue(s)" > VAR.txt
            exit 1
          fi
          echo "| $(grep . VAR.txt) issue(s)" > VAR.txt
        continue-on-error: true

      - name: Sending bot message
        uses: ./.github/actions/bot_messaging
        with:
          bot_url: ${{ secrets.BOT_GLADOS_URL }}
          bot_id: ${{ secrets.JO_CHAT_ID }}
        continue-on-error: true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: failure() 
        with:
          name: cpp-check-output-file
          path: src/CPP_CHECK.txt

    continue-on-error: true
  #* -can adjust how many CPP-check issues may be for successfull pass
















        
  # build:
  #   runs-on: self-hosted
  #   # runs-on: ubuntu-latest

  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v4

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         echo "Add other actions to build,"
  #         echo "test, and deploy your project."
  #         pwd
  #         ls
